version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - qdrant
    restart: unless-stopped
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-agentflow}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-agentflow}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5

  qdrant:
    image: qdrant/qdrant:v1.7.4
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:6333/readyz"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Uncomment if you need Neo4j
  # neo4j:
  #   image: neo4j:5.13
  #   environment:
  #     - NEO4J_AUTH=neo4j/your-password
  #     - NEO4J_dbms_memory_pagecache_size=512M
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   volumes:
  #     - neo4j_data:/data
  #     - neo4j_logs:/logs
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "http://localhost:7474"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # Uncomment if you need pgAdmin
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - postgres

  # Uncomment if you need Redis Commander
  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - redis

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  # Uncomment if you need Neo4j
  # neo4j_data:
  # neo4j_logs:
